

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Nov 20 17:45:38 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F67J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _RPINR12_13	set	3632
    17  0000                     _RPOR22_23	set	3613
    18  0000                     _RPOR24_25	set	3614
    19  0000                     _SSP2BUF	set	3843
    20  0000                     _SSP2CON1	set	3865
    21  0000                     _SSP2CON3	set	3897
    22  0000                     _SSP2STAT	set	3866
    23  0000                     _SSP2STATbits	set	3866
    24  0000                     _LATDbits	set	3980
    25  0000                     _OSCCON	set	4051
    26  0000                     _TRISCbits	set	3988
    27  0000                     _TRISDbits	set	3989
    28                           
    29                           	psect	smallconst
    30  000E00                     __psmallconst:
    31                           	opt stack 0
    32  000E00  00                 	db	0
    33  000E01                     STR_1:
    34                           
    35                           ; BSR set to: 15
    36  000E01  48                 	db	72	;'H'
    37  000E02  65                 	db	101	;'e'
    38  000E03  6C                 	db	108	;'l'
    39  000E04  6C                 	db	108	;'l'
    40  000E05  6F                 	db	111	;'o'
    41  000E06  20                 	db	32
    42  000E07  77                 	db	119	;'w'
    43  000E08  6F                 	db	111	;'o'
    44  000E09  72                 	db	114	;'r'
    45  000E0A  6C                 	db	108	;'l'
    46  000E0B  64                 	db	100	;'d'
    47  000E0C  00                 	db	0
    48                           
    49                           ; #config settings
    50  000E0D  00                 	db	0	; dummy byte at the end
    51  0000                     
    52                           	psect	cinit
    53  000FAA                     __pcinit:
    54                           	opt stack 0
    55  000FAA                     start_initialization:
    56                           	opt stack 0
    57  000FAA                     __initialization:
    58                           	opt stack 0
    59  000FAA                     end_of_initialization:
    60                           	opt stack 0
    61  000FAA                     __end_of__initialization:
    62                           	opt stack 0
    63  000FAA  0E00               	movlw	low (__Lsmallconst shr (0+16))
    64  000FAC  6EF8               	movwf	tblptru,c
    65  000FAE  0E0E               	movlw	high __Lsmallconst
    66  000FB0  6EF7               	movwf	tblptrh,c
    67  000FB2  0100               	movlb	0
    68  000FB4  EF07  F007         	goto	_main	;jump to C main() function
    69                           tblptru	equ	0xFF8
    70                           tblptrh	equ	0xFF7
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	opt stack 0
    75  000001                     spi_Send_Read@byte:
    76                           	opt stack 0
    77                           
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	1
    80  000002                     readBusyFlag@retValue:
    81                           	opt stack 0
    82                           
    83                           ; 1 bytes @ 0x1
    84  000002                     	ds	1
    85  000003                     ??_putchLCD:
    86                           
    87                           ; 1 bytes @ 0x2
    88  000003                     	ds	2
    89  000005                     putchLCD@input:
    90                           	opt stack 0
    91                           
    92                           ; 1 bytes @ 0x4
    93  000005                     	ds	1
    94  000006                     putStringLCD@input:
    95                           	opt stack 0
    96                           
    97                           ; 2 bytes @ 0x5
    98  000006                     	ds	2
    99  000008                     ??_putStringLCD:
   100                           
   101                           ; 1 bytes @ 0x7
   102  000008                     	ds	2
   103  00000A                     putStringLCD@i:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x9
   107  00000A                     	ds	2
   108  00000C                     ??_main:
   109                           
   110                           ; 1 bytes @ 0xB
   111  00000C                     	ds	1
   112  00000D                     main@status:
   113                           	opt stack 0
   114                           
   115                           ; 1 bytes @ 0xC
   116  00000D                     	ds	1
   117                           tblptru	equ	0xFF8
   118                           tblptrh	equ	0xFF7
   119                           
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 22 in file "main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;  data            5    0        unsigned char [5]
   130 ;;  i               2    0        int 
   131 ;;  status          1   12[COMRAM] unsigned char 
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : 0/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   145 ;;Total ram usage:        2 bytes
   146 ;; Hardware stack levels required when called:    4
   147 ;; This function calls:
   148 ;;		_initialisation_SPI
   149 ;;		_putStringLCD
   150 ;;		_readBusyFlag
   151 ;;		_spi_Send_Read
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  000E0E                     __ptext0:
   159                           	opt stack 0
   160  000E0E                     _main:
   161                           	opt stack 27
   162                           
   163                           ;main.c: 24: unsigned char status = 0;
   164                           
   165                           ; BSR set to: 15
   166                           ;incstack = 0
   167  000E0E  0E00               	movlw	0
   168  000E10  6E0D               	movwf	main@status,c
   169                           
   170                           ;main.c: 25: unsigned char data[5];
   171                           ;main.c: 26: int i;
   172                           ;main.c: 29: OSCCON = OSCCON | 0b01110000;
   173  000E12  50D3               	movf	4051,w,c	;volatile
   174  000E14  0970               	iorlw	112
   175  000E16  6ED3               	movwf	4051,c	;volatile
   176                           
   177                           ;main.c: 31: initialisation_SPI();
   178  000E18  ECA0  F007         	call	_initialisation_SPI	;wreg free
   179                           
   180                           ;main.c: 35: TRISDbits.TRISD4 = 0;
   181  000E1C  9895               	bcf	3989,4,c	;volatile
   182                           
   183                           ;main.c: 36: TRISDbits.TRISD2 = 0;
   184  000E1E  9495               	bcf	3989,2,c	;volatile
   185                           
   186                           ;main.c: 37: TRISDbits.TRISD3 = 0;
   187  000E20  9695               	bcf	3989,3,c	;volatile
   188                           
   189                           ;main.c: 38: TRISDbits.TRISD1 = 1;
   190  000E22  8295               	bsf	3989,1,c	;volatile
   191                           
   192                           ;main.c: 39: TRISCbits.TRISC0 = 0;
   193  000E24  9094               	bcf	3988,0,c	;volatile
   194                           
   195                           ;main.c: 40: LATDbits.LATD3 = 1;
   196  000E26  868C               	bsf	3980,3,c	;volatile
   197                           
   198                           ;main.c: 41: __nop();
   199  000E28  F000               	nop	
   200                           
   201                           ;main.c: 42: _delay((unsigned long)((33)*(8000000/4000.0)));
   202  000E2A  0E56               	movlw	86
   203  000E2C  6E0C               	movwf	??_main& (0+255),c
   204  000E2E  0EB6               	movlw	182
   205  000E30                     u97:
   206  000E30  2EE8               	decfsz	wreg,f,c
   207  000E32  D7FE               	goto	u97
   208  000E34  2E0C               	decfsz	??_main& (0+255),f,c
   209  000E36  D7FC               	goto	u97
   210                           
   211                           ;main.c: 43: _delay((unsigned long)((33)*(8000000/4000.0)));
   212  000E38  0E56               	movlw	86
   213  000E3A  6E0C               	movwf	??_main& (0+255),c
   214  000E3C  0EB6               	movlw	182
   215  000E3E                     u107:
   216  000E3E  2EE8               	decfsz	wreg,f,c
   217  000E40  D7FE               	goto	u107
   218  000E42  2E0C               	decfsz	??_main& (0+255),f,c
   219  000E44  D7FC               	goto	u107
   220                           
   221                           ;main.c: 44: _delay((unsigned long)((33)*(8000000/4000.0)));
   222  000E46  0E56               	movlw	86
   223  000E48  6E0C               	movwf	??_main& (0+255),c
   224  000E4A  0EB6               	movlw	182
   225  000E4C                     u117:
   226  000E4C  2EE8               	decfsz	wreg,f,c
   227  000E4E  D7FE               	goto	u117
   228  000E50  2E0C               	decfsz	??_main& (0+255),f,c
   229  000E52  D7FC               	goto	u117
   230                           
   231                           ;main.c: 47: LATDbits.LATD3 = 0;
   232  000E54  968C               	bcf	3980,3,c	;volatile
   233                           
   234                           ;main.c: 48: spi_Send_Read(0xF8);
   235  000E56  0EF8               	movlw	248
   236  000E58  ECCC  F007         	call	_spi_Send_Read
   237                           
   238                           ;main.c: 49: spi_Send_Read(0xF0);
   239  000E5C  0EF0               	movlw	240
   240  000E5E  ECCC  F007         	call	_spi_Send_Read
   241                           
   242                           ;main.c: 50: spi_Send_Read(0x00);
   243  000E62  0E00               	movlw	0
   244  000E64  ECCC  F007         	call	_spi_Send_Read
   245                           
   246                           ;main.c: 51: LATDbits.LATD3 = 1;
   247  000E68  868C               	bsf	3980,3,c	;volatile
   248  000E6A                     l840:
   249  000E6A  ECBF  F007         	call	_readBusyFlag	;wreg free
   250  000E6E  0900               	iorlw	0
   251  000E70  A4D8               	btfss	status,2,c
   252  000E72  D7FB               	goto	l840
   253                           
   254                           ;main.c: 53: putStringLCD("Hello world");
   255  000E74  0E01               	movlw	low STR_1
   256  000E76  6E06               	movwf	putStringLCD@input,c
   257  000E78  0E0E               	movlw	high STR_1
   258  000E7A  6E07               	movwf	putStringLCD@input+1,c
   259  000E7C  EC7B  F007         	call	_putStringLCD	;wreg free
   260  000E80                     l44:
   261                           
   262                           ;main.c: 55: {
   263  000E80  D7FF               	goto	l44
   264  000E82                     __end_of_main:
   265                           	opt stack 0
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           wreg	equ	0xFE8
   269                           status	equ	0xFD8
   270                           
   271 ;; *************** function _putStringLCD *****************
   272 ;; Defined at:
   273 ;;		line 76 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;  input           2    5[COMRAM] PTR unsigned char 
   276 ;;		 -> STR_1(12), 
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  i               2    9[COMRAM] int 
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   291 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   292 ;;Total ram usage:        6 bytes
   293 ;; Hardware stack levels used:    1
   294 ;; Hardware stack levels required when called:    3
   295 ;; This function calls:
   296 ;;		_putchLCD
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text1
   303  000EF6                     __ptext1:
   304                           	opt stack 0
   305  000EF6                     _putStringLCD:
   306                           	opt stack 27
   307                           
   308                           ;main.c: 78: int i;
   309                           ;main.c: 79: for (i = 0; input[i] != '\0'; i++)
   310                           
   311                           ;incstack = 0
   312  000EF6  0E00               	movlw	0
   313  000EF8  6E0B               	movwf	putStringLCD@i+1,c
   314  000EFA  0E00               	movlw	0
   315  000EFC  6E0A               	movwf	putStringLCD@i,c
   316  000EFE  D010               	goto	l802
   317  000F00                     l798:
   318                           
   319                           ;main.c: 80: {
   320                           ;main.c: 81: putchLCD(input[i]);
   321  000F00  500A               	movf	putStringLCD@i,w,c
   322  000F02  2406               	addwf	putStringLCD@input,w,c
   323  000F04  6E08               	movwf	??_putStringLCD& (0+255),c
   324  000F06  500B               	movf	putStringLCD@i+1,w,c
   325  000F08  2007               	addwfc	putStringLCD@input+1,w,c
   326  000F0A  6E09               	movwf	(??_putStringLCD+1)& (0+255),c
   327  000F0C  C008  FFF6         	movff	??_putStringLCD,tblptrl
   328  000F10  C009  FFF7         	movff	??_putStringLCD+1,tblptrh
   329  000F14                     	if	0	;tblptru may be non-zero
   330  000F14                     	endif
   331  000F14                     	if	0	;tblptru may be non-zero
   332  000F14                     	endif
   333  000F14  0008               	tblrd		*
   334  000F16  50F5               	movf	tablat,w,c
   335  000F18  EC41  F007         	call	_putchLCD
   336  000F1C  4A0A               	infsnz	putStringLCD@i,f,c
   337  000F1E  2A0B               	incf	putStringLCD@i+1,f,c
   338  000F20                     l802:
   339  000F20  500A               	movf	putStringLCD@i,w,c
   340  000F22  2406               	addwf	putStringLCD@input,w,c
   341  000F24  6E08               	movwf	??_putStringLCD& (0+255),c
   342  000F26  500B               	movf	putStringLCD@i+1,w,c
   343  000F28  2007               	addwfc	putStringLCD@input+1,w,c
   344  000F2A  6E09               	movwf	(??_putStringLCD+1)& (0+255),c
   345  000F2C  C008  FFF6         	movff	??_putStringLCD,tblptrl
   346  000F30  C009  FFF7         	movff	??_putStringLCD+1,tblptrh
   347  000F34                     	if	0	;tblptru may be non-zero
   348  000F34                     	endif
   349  000F34                     	if	0	;tblptru may be non-zero
   350  000F34                     	endif
   351  000F34  0008               	tblrd		*
   352  000F36  50F5               	movf	tablat,w,c
   353  000F38  0900               	iorlw	0
   354  000F3A  B4D8               	btfsc	status,2,c
   355  000F3C  0012               	return	
   356  000F3E  D7E0               	goto	l798
   357  000F40                     __end_of_putStringLCD:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           wreg	equ	0xFE8
   364                           status	equ	0xFD8
   365                           
   366 ;; *************** function _putchLCD *****************
   367 ;; Defined at:
   368 ;;		line 85 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  input           1    wreg     unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  input           1    4[COMRAM] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   386 ;;Total ram usage:        3 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		_readBusyFlag
   391 ;;		_spi_Send_Read
   392 ;; This function is called by:
   393 ;;		_putStringLCD
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text2
   398  000E82                     __ptext2:
   399                           	opt stack 0
   400  000E82                     _putchLCD:
   401                           	opt stack 27
   402                           
   403                           ;incstack = 0
   404                           ;putchLCD@input stored from wreg
   405  000E82  6E05               	movwf	putchLCD@input,c
   406                           
   407                           ;main.c: 87: input = (input & 0xF0) >> 4 | (input & 0x0F) << 4;
   408  000E84  C005  F003         	movff	putchLCD@input,??_putchLCD
   409  000E88  0E0F               	movlw	15
   410  000E8A  1603               	andwf	??_putchLCD,f,c
   411  000E8C  3A03               	swapf	??_putchLCD,f,c
   412  000E8E  0EF0               	movlw	240
   413  000E90  1603               	andwf	??_putchLCD,f,c
   414  000E92  3805               	swapf	putchLCD@input,w,c
   415  000E94  0B0F               	andlw	15
   416  000E96  0B0F               	andlw	15
   417  000E98  1003               	iorwf	??_putchLCD,w,c
   418  000E9A  6E05               	movwf	putchLCD@input,c
   419                           
   420                           ;main.c: 88: input = (input & 0xCC) >> 2 | (input & 0x33) << 2;
   421  000E9C  C005  F003         	movff	putchLCD@input,??_putchLCD
   422  000EA0  0E33               	movlw	51
   423  000EA2  1603               	andwf	??_putchLCD,f,c
   424  000EA4  90D8               	bcf	status,0,c
   425  000EA6  3603               	rlcf	??_putchLCD,f,c
   426  000EA8  90D8               	bcf	status,0,c
   427  000EAA  3603               	rlcf	??_putchLCD,f,c
   428  000EAC  4005               	rrncf	putchLCD@input,w,c
   429  000EAE  42E8               	rrncf	wreg,f,c
   430  000EB0  0B3F               	andlw	63
   431  000EB2  0B33               	andlw	51
   432  000EB4  1003               	iorwf	??_putchLCD,w,c
   433  000EB6  6E05               	movwf	putchLCD@input,c
   434                           
   435                           ;main.c: 89: input = (input & 0xAA) >> 1 | (input & 0x55) << 1;
   436  000EB8  C005  F003         	movff	putchLCD@input,??_putchLCD
   437  000EBC  0E55               	movlw	85
   438  000EBE  1603               	andwf	??_putchLCD,f,c
   439  000EC0  90D8               	bcf	status,0,c
   440  000EC2  3403               	rlcf	??_putchLCD,w,c
   441  000EC4  6E04               	movwf	(??_putchLCD+1)& (0+255),c
   442  000EC6  90D8               	bcf	status,0,c
   443  000EC8  3005               	rrcf	putchLCD@input,w,c
   444  000ECA  0B55               	andlw	85
   445  000ECC  1004               	iorwf	??_putchLCD+1,w,c
   446  000ECE  6E05               	movwf	putchLCD@input,c
   447  000ED0                     l706:
   448  000ED0  ECBF  F007         	call	_readBusyFlag	;wreg free
   449  000ED4  0900               	iorlw	0
   450  000ED6  A4D8               	btfss	status,2,c
   451  000ED8  D7FB               	goto	l706
   452                           
   453                           ;main.c: 92: LATDbits.LATD3 = 0;
   454  000EDA  968C               	bcf	3980,3,c	;volatile
   455                           
   456                           ;main.c: 93: spi_Send_Read(0xFA);
   457  000EDC  0EFA               	movlw	250
   458  000EDE  ECCC  F007         	call	_spi_Send_Read
   459                           
   460                           ;main.c: 94: spi_Send_Read(input & 0xF0);
   461  000EE2  5005               	movf	putchLCD@input,w,c
   462  000EE4  0BF0               	andlw	240
   463  000EE6  ECCC  F007         	call	_spi_Send_Read
   464                           
   465                           ;main.c: 95: spi_Send_Read(input << 4);
   466  000EEA  3805               	swapf	putchLCD@input,w,c
   467  000EEC  0BF0               	andlw	240
   468  000EEE  ECCC  F007         	call	_spi_Send_Read
   469                           
   470                           ;main.c: 96: LATDbits.LATD3 = 1;
   471  000EF2  868C               	bsf	3980,3,c	;volatile
   472  000EF4  0012               	return		;funcret
   473  000EF6                     __end_of_putchLCD:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           wreg	equ	0xFE8
   480                           status	equ	0xFD8
   481                           
   482 ;; *************** function _readBusyFlag *****************
   483 ;; Defined at:
   484 ;;		line 100 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  retValue        1    1[COMRAM] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		_spi_Send_Read
   507 ;; This function is called by:
   508 ;;		_main
   509 ;;		_putchLCD
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text3
   514  000F7E                     __ptext3:
   515                           	opt stack 0
   516  000F7E                     _readBusyFlag:
   517                           	opt stack 29
   518                           
   519                           ;main.c: 102: unsigned char retValue;
   520                           ;main.c: 104: LATDbits.LATD3 = 0;
   521                           
   522                           ;incstack = 0
   523  000F7E  968C               	bcf	3980,3,c	;volatile
   524                           
   525                           ;main.c: 105: spi_Send_Read(0xFC);
   526  000F80  0EFC               	movlw	252
   527  000F82  ECCC  F007         	call	_spi_Send_Read
   528                           
   529                           ;main.c: 106: retValue = spi_Send_Read(0x00);
   530  000F86  0E00               	movlw	0
   531  000F88  ECCC  F007         	call	_spi_Send_Read
   532  000F8C  6E02               	movwf	readBusyFlag@retValue,c
   533                           
   534                           ;main.c: 107: LATDbits.LATD3 = 1;
   535  000F8E  868C               	bsf	3980,3,c	;volatile
   536                           
   537                           ;main.c: 108: _delay((unsigned long)((1)*(8000000/4000000.0)));
   538  000F90  D000               	nop2		;2 cycle nop
   539                           
   540                           ;main.c: 109: return retValue & 1;
   541  000F92  5002               	movf	readBusyFlag@retValue,w,c
   542  000F94  0B01               	andlw	1
   543  000F96  0012               	return	
   544  000F98                     __end_of_readBusyFlag:
   545                           	opt stack 0
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           wreg	equ	0xFE8
   551                           status	equ	0xFD8
   552                           
   553 ;; *************** function _spi_Send_Read *****************
   554 ;; Defined at:
   555 ;;		line 69 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  byte            1    wreg     unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  byte            1    0[COMRAM] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      unsigned char 
   562 ;; Registers used:
   563 ;;		wreg, status,2
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;;		_putchLCD
   580 ;;		_readBusyFlag
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text4
   585  000F98                     __ptext4:
   586                           	opt stack 0
   587  000F98                     _spi_Send_Read:
   588                           	opt stack 30
   589                           
   590                           ;incstack = 0
   591                           ;spi_Send_Read@byte stored from wreg
   592  000F98  6E01               	movwf	spi_Send_Read@byte,c
   593                           
   594                           ;main.c: 71: SSP2BUF = byte;
   595  000F9A  C001  FF03         	movff	spi_Send_Read@byte,3843	;volatile
   596  000F9E                     l50:
   597  000F9E  010F               	movlb	15	; () banked
   598  000FA0  A11A               	btfss	26,0,b	;volatile
   599  000FA2  D7FD               	goto	l50
   600                           
   601                           ; BSR set to: 15
   602                           ;main.c: 73: return SSP2BUF;
   603  000FA4  010F               	movlb	15	; () banked
   604  000FA6  5103               	movf	3,w,b	;volatile
   605                           
   606                           ; BSR set to: 15
   607  000FA8  0012               	return		;funcret
   608  000FAA                     __end_of_spi_Send_Read:
   609                           	opt stack 0
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           wreg	equ	0xFE8
   615                           status	equ	0xFD8
   616                           
   617 ;; *************** function _initialisation_SPI *****************
   618 ;; Defined at:
   619 ;;		line 119 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text5
   647  000F40                     __ptext5:
   648                           	opt stack 0
   649  000F40                     _initialisation_SPI:
   650                           	opt stack 30
   651                           
   652                           ;main.c: 123: RPOR24_25 |= 0x04;
   653                           
   654                           ; BSR set to: 15
   655                           ;incstack = 0
   656  000F40  010E               	movlb	14	; () banked
   657  000F42  851E               	bsf	30,2,b	;volatile
   658                           
   659                           ; BSR set to: 14
   660                           ;main.c: 124: RPOR24_25 &= 0xF4;
   661  000F44  0EF4               	movlw	244
   662  000F46  010E               	movlb	14	; () banked
   663  000F48  171E               	andwf	30,f,b	;volatile
   664                           
   665                           ; BSR set to: 14
   666                           ;main.c: 126: RPOR22_23 |= 0x05;
   667  000F4A  0E05               	movlw	5
   668  000F4C  010E               	movlb	14	; () banked
   669  000F4E  131D               	iorwf	29,f,b	;volatile
   670                           
   671                           ; BSR set to: 14
   672                           ;main.c: 127: RPOR22_23 &= 0xF5;
   673  000F50  0EF5               	movlw	245
   674  000F52  010E               	movlb	14	; () banked
   675  000F54  171D               	andwf	29,f,b	;volatile
   676                           
   677                           ; BSR set to: 14
   678                           ;main.c: 129: RPINR12_13 |= 0x50;
   679  000F56  0E50               	movlw	80
   680  000F58  010E               	movlb	14	; () banked
   681  000F5A  1330               	iorwf	48,f,b	;volatile
   682                           
   683                           ; BSR set to: 14
   684                           ;main.c: 130: RPINR12_13 &= 0x5F;
   685  000F5C  0E5F               	movlw	95
   686  000F5E  010E               	movlb	14	; () banked
   687  000F60  1730               	andwf	48,f,b	;volatile
   688                           
   689                           ; BSR set to: 14
   690                           ;main.c: 133: SSP2CON1 &= 0xF1;
   691  000F62  0EF1               	movlw	241
   692  000F64  010F               	movlb	15	; () banked
   693  000F66  1719               	andwf	25,f,b	;volatile
   694                           
   695                           ; BSR set to: 15
   696                           ;main.c: 134: SSP2CON1 |= 0x31;
   697  000F68  0E31               	movlw	49
   698  000F6A  010F               	movlb	15	; () banked
   699  000F6C  1319               	iorwf	25,f,b	;volatile
   700                           
   701                           ; BSR set to: 15
   702                           ;main.c: 135: SSP2STAT |= 0x80;
   703  000F6E  010F               	movlb	15	; () banked
   704  000F70  8F1A               	bsf	26,7,b	;volatile
   705                           
   706                           ; BSR set to: 15
   707                           ;main.c: 136: SSP2STAT &= ~0x40;
   708  000F72  010F               	movlb	15	; () banked
   709  000F74  9D1A               	bcf	26,6,b	;volatile
   710                           
   711                           ; BSR set to: 15
   712                           ;main.c: 137: SSP2CON3 &= 0x8F;
   713  000F76  0E8F               	movlw	143
   714  000F78  010F               	movlb	15	; () banked
   715  000F7A  1739               	andwf	57,f,b	;volatile
   716                           
   717                           ; BSR set to: 15
   718  000F7C  0012               	return		;funcret
   719  000F7E                     __end_of_initialisation_SPI:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           wreg	equ	0xFE8
   726                           status	equ	0xFD8
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           wreg	equ	0xFE8
   732                           status	equ	0xFD8
   733                           
   734                           	psect	rparam
   735  0000                     tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           wreg	equ	0xFE8
   740                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    putStringLCD@input	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_putStringLCD
    _putStringLCD->_putchLCD
    _putchLCD->_readBusyFlag
    _readBusyFlag->_spi_Send_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     365
                                             11 COMRAM     2     2      0
                 _initialisation_SPI
                       _putStringLCD
                       _readBusyFlag
                      _spi_Send_Read
 ---------------------------------------------------------------------------------
 (1) _putStringLCD                                         6     4      2     319
                                              5 COMRAM     6     4      2
                           _putchLCD
 ---------------------------------------------------------------------------------
 (2) _putchLCD                                             3     3      0     165
                                              2 COMRAM     3     3      0
                       _readBusyFlag
                      _spi_Send_Read
 ---------------------------------------------------------------------------------
 (1) _readBusyFlag                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _spi_Send_Read
 ---------------------------------------------------------------------------------
 (1) _spi_Send_Read                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_SPI                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation_SPI
   _putStringLCD
     _putchLCD
       _readBusyFlag
         _spi_Send_Read
       _spi_Send_Read
   _readBusyFlag
     _spi_Send_Read
   _spi_Send_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      D       D       1       13.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BIGRAM             DF9      0       0      33        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Nov 20 17:45:38 2017

                         l50 0F9E                           l44 0E80                 _putStringLCD 0EF6  
                         u97 0E30                  __CFG_BORV$1 000000                          l706 0ED0  
                        l802 0F20                          l840 0E6A                          l798 0F00  
                        u107 0E3E                          u117 0E4C                          wreg 000FE8  
                       STR_1 0E01                         _main 0E0E                         start 0000  
              __CFG_IESO$OFF 000000                __CFG_FOSC$FRC 000000                 ___param_bank 000010  
          putStringLCD@input 0006                        ?_main 0001  __size_of_initialisation_SPI 003E  
                      tablat 000FF5                        status 000FD8              __initialization 0FAA  
               __end_of_main 0E82                       ??_main 000C                __activetblptr 000001  
              ?_readBusyFlag 0001            spi_Send_Read@byte 0001                       _OSCCON 000FD3  
             __CFG_XINST$OFF 000000                putchLCD@input 0005               __CFG_STVREN$ON 000000  
             ??_readBusyFlag 0002                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_putchLCD 0EF6  
                 __accesstop 0060      __end_of__initialization 0FAA                ___rparam_used 000001  
             __pcstackCOMRAM 0001                putStringLCD@i 000A        __end_of_spi_Send_Read 0FAA  
                    _SSP2BUF 000F03         __end_of_readBusyFlag 0F98                      __Hparam 0000  
                    __Lparam 0000                    ?_putchLCD 0001                 __psmallconst 0E00  
                    __pcinit 0FAA                      __ramtop 0E00                      __ptext0 0E0E  
                    __ptext1 0EF6                      __ptext2 0E82                      __ptext3 0F7E  
                    __ptext4 0F98                      __ptext5 0F40   __end_of_initialisation_SPI 0F7E  
       end_of_initialization 0FAA                   ??_putchLCD 0003                    _RPOR22_23 000E1D  
                  _RPOR24_25 000E1E         readBusyFlag@retValue 0002                    _TRISCbits 000F94  
                  _TRISDbits 000F95                   main@status 000D                ?_putStringLCD 0006  
        start_initialization 0FAA        __size_of_readBusyFlag 001A               ??_putStringLCD 0008  
               _readBusyFlag 0F7E            __size_of_putchLCD 0074                  __smallconst 0E00  
     __size_of_spi_Send_Read 0012                     _LATDbits 000F8C           _initialisation_SPI 0F40  
           __CFG_WDTPS$32768 000000          ?_initialisation_SPI 0001                     _SSP2CON1 000F19  
                   _SSP2CON3 000F39                     _SSP2STAT 000F1A         ??_initialisation_SPI 0001  
       __end_of_putStringLCD 0F40                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 0E00                _spi_Send_Read 0F98                __size_of_main 0074  
             ?_spi_Send_Read 0001                     _putchLCD 0E82                 _SSP2STATbits 000F1A  
                 _RPINR12_13 000E30        __size_of_putStringLCD 004A              ??_spi_Send_Read 0001  
