

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Nov 19 19:01:11 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F67J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	nvCOMRAM
    26  000021                     __pnvCOMRAM:
    27                           	opt stack 0
    28  000021                     _CNT2:
    29                           	opt stack 0
    30  000021                     	ds	2
    31  000023                     _LCDbusy:
    32                           	opt stack 0
    33  000023                     	ds	1
    34  0000                     _INTCON2bits	set	4081
    35  0000                     _INTCONbits	set	4082
    36  0000                     _LATDbits	set	3980
    37  0000                     _RCONbits	set	4048
    38  0000                     _T0CONbits	set	4053
    39  0000                     _TMR0H	set	4055
    40  0000                     _TMR0L	set	4054
    41  0000                     _TRISDbits	set	3989
    42                           
    43                           ; #config settings
    44  0000                     
    45                           	psect	cinit
    46  0001DE                     __pcinit:
    47                           	opt stack 0
    48  0001DE                     start_initialization:
    49                           	opt stack 0
    50  0001DE                     __initialization:
    51                           	opt stack 0
    52                           
    53                           ; Clear objects allocated to COMRAM (9 bytes)
    54  0001DE  EE00  F018         	lfsr	0,__pbssCOMRAM
    55  0001E2  0E09               	movlw	9
    56  0001E4                     clear_0:
    57  0001E4  6AEE               	clrf	postinc0,c
    58  0001E6  06E8               	decf	wreg,f,c
    59  0001E8  E1FD               	bnz	clear_0
    60  0001EA                     end_of_initialization:
    61                           	opt stack 0
    62  0001EA                     __end_of__initialization:
    63                           	opt stack 0
    64  0001EA  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    65  0001EC  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    66  0001EE  0100               	movlb	0
    67  0001F0  EFB8  F000         	goto	_main	;jump to C main() function
    68                           postinc0	equ	0xFEE
    69                           wreg	equ	0xFE8
    70                           
    71                           	psect	bssCOMRAM
    72  000018                     __pbssCOMRAM:
    73                           	opt stack 0
    74  000018                     _DataLCD:
    75                           	opt stack 0
    76  000018                     	ds	4
    77  00001C                     _CNT1:
    78                           	opt stack 0
    79  00001C                     	ds	2
    80  00001E                     _NextCNT2:
    81                           	opt stack 0
    82  00001E                     	ds	2
    83  000020                     _FlagCSToggle:
    84                           	opt stack 0
    85  000020                     	ds	1
    86                           postinc0	equ	0xFEE
    87                           wreg	equ	0xFE8
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	opt stack 0
    92  000001                     ??_myIsr:
    93  000001                     
    94                           ; 1 bytes @ 0x0
    95  000001                     	ds	17
    96  000012                     ?_Timer0Init:
    97                           	opt stack 0
    98  000012                     InitDataLCD@RW:
    99                           	opt stack 0
   100  000012                     LCDWait@delaiUs:
   101                           	opt stack 0
   102                           
   103                           ; 2 bytes @ 0x11
   104  000012                     	ds	1
   105  000013                     InitDataLCD@data:
   106                           	opt stack 0
   107                           
   108                           ; 1 bytes @ 0x12
   109  000013                     	ds	1
   110  000014                     InitDataLCD@delayUs:
   111                           	opt stack 0
   112                           
   113                           ; 2 bytes @ 0x13
   114  000014                     	ds	2
   115  000016                     ??_InitDataLCD:
   116                           
   117                           ; 1 bytes @ 0x15
   118  000016                     	ds	1
   119  000017                     InitDataLCD@RS:
   120                           	opt stack 0
   121                           
   122                           ; 1 bytes @ 0x16
   123  000017                     	ds	1
   124  000018                     postinc0	equ	0xFEE
   125                           wreg	equ	0xFE8
   126                           
   127                           ; 1 bytes @ 0x17
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 29 in file "main.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   151 ;;Total ram usage:        0 bytes
   152 ;; Hardware stack levels required when called:    5
   153 ;; This function calls:
   154 ;;		_InitDataLCD
   155 ;;		_InitLCD
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162  000170                     __ptext0:
   163                           	opt stack 0
   164  000170                     _main:
   165                           	opt stack 26
   166                           
   167                           ;main.c: 31: InitLCD();
   168                           
   169                           ;incstack = 0
   170  000170  ECD1  F000         	call	_InitLCD	;wreg free
   171                           
   172                           ;main.c: 32: InitDataLCD(0,0,0x02,1600);
   173  000174  0E00               	movlw	0
   174  000176  6E12               	movwf	InitDataLCD@RW,c
   175  000178  0E02               	movlw	2
   176  00017A  6E13               	movwf	InitDataLCD@data,c
   177  00017C  0E06               	movlw	6
   178  00017E  6E15               	movwf	InitDataLCD@delayUs+1,c
   179  000180  0E40               	movlw	64
   180  000182  6E14               	movwf	InitDataLCD@delayUs,c
   181  000184  0E00               	movlw	0
   182  000186  EC5C  F000         	call	_InitDataLCD
   183  00018A                     l892:
   184                           
   185                           ;main.c: 36: {
   186                           ;main.c: 37: InitDataLCD(0,0,0x48,50);
   187  00018A  0E00               	movlw	0
   188  00018C  6E12               	movwf	InitDataLCD@RW,c
   189  00018E  0E48               	movlw	72
   190  000190  6E13               	movwf	InitDataLCD@data,c
   191  000192  0E00               	movlw	0
   192  000194  6E15               	movwf	InitDataLCD@delayUs+1,c
   193  000196  0E32               	movlw	50
   194  000198  6E14               	movwf	InitDataLCD@delayUs,c
   195  00019A  0E00               	movlw	0
   196  00019C  EC5C  F000         	call	_InitDataLCD
   197  0001A0  D7F4               	goto	l892
   198  0001A2                     __end_of_main:
   199                           	opt stack 0
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203 ;; *************** function _InitLCD *****************
   204 ;; Defined at:
   205 ;;		line 20 in file "Fonctions.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   223 ;;Total ram usage:        0 bytes
   224 ;; Hardware stack levels used:    1
   225 ;; Hardware stack levels required when called:    4
   226 ;; This function calls:
   227 ;;		_IOInit
   228 ;;		_LCDWait
   229 ;;		_Timer0Init
   230 ;;		_Timer0IntInit
   231 ;; This function is called by:
   232 ;;		_main
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text1
   237  0001A2                     __ptext1:
   238                           	opt stack 0
   239  0001A2                     _InitLCD:
   240                           	opt stack 26
   241                           
   242                           ;Fonctions.c: 22: Timer0Init(0);
   243                           
   244                           ;incstack = 0
   245  0001A2  0E00               	movlw	0
   246  0001A4  6E13               	movwf	?_Timer0Init+1,c
   247  0001A6  0E00               	movlw	0
   248  0001A8  6E12               	movwf	?_Timer0Init,c
   249  0001AA  ECE2  F000         	call	_Timer0Init	;wreg free
   250                           
   251                           ;Fonctions.c: 23: IOInit();
   252  0001AE  EC01  F001         	call	_IOInit	;wreg free
   253                           
   254                           ;Fonctions.c: 24: Timer0IntInit();
   255  0001B2  EC0F  F001         	call	_Timer0IntInit	;wreg free
   256                           
   257                           ;Fonctions.c: 25: LCDWait(100000);
   258  0001B6  0E86               	movlw	134
   259  0001B8  6E13               	movwf	LCDWait@delaiUs+1,c
   260  0001BA  0EA0               	movlw	160
   261  0001BC  6E12               	movwf	LCDWait@delaiUs,c
   262  0001BE  ECFA  F000         	call	_LCDWait	;wreg free
   263  0001C2  0012               	return		;funcret
   264  0001C4                     __end_of_InitLCD:
   265                           	opt stack 0
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269 ;; *************** function _Timer0IntInit *****************
   270 ;; Defined at:
   271 ;;		line 54 in file "Fonctions.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		None
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used:    1
   291 ;; Hardware stack levels required when called:    2
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		_InitLCD
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text2
   300  00021E                     __ptext2:
   301                           	opt stack 0
   302  00021E                     _Timer0IntInit:
   303                           	opt stack 27
   304                           
   305                           ;Fonctions.c: 56: INTCON2bits.TMR0IP = 0;
   306                           
   307                           ;incstack = 0
   308  00021E  94F1               	bcf	intcon2,2,c	;volatile
   309                           
   310                           ;Fonctions.c: 57: INTCONbits.TMR0IE = 1;
   311  000220  8AF2               	bsf	intcon,5,c	;volatile
   312                           
   313                           ;Fonctions.c: 58: INTCONbits.PEIE = 1;
   314  000222  8CF2               	bsf	intcon,6,c	;volatile
   315                           
   316                           ;Fonctions.c: 59: INTCONbits.GIE = 1;
   317  000224  8EF2               	bsf	intcon,7,c	;volatile
   318                           
   319                           ;Fonctions.c: 60: RCONbits.IPEN = 1;
   320  000226  8ED0               	bsf	4048,7,c	;volatile
   321  000228  0012               	return		;funcret
   322  00022A                     __end_of_Timer0IntInit:
   323                           	opt stack 0
   324                           intcon	equ	0xFF2
   325                           intcon2	equ	0xFF1
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329 ;; *************** function _Timer0Init *****************
   330 ;; Defined at:
   331 ;;		line 30 in file "Fonctions.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    3
   352 ;; This function calls:
   353 ;;		_Timer0Stop
   354 ;; This function is called by:
   355 ;;		_InitLCD
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text3
   360  0001C4                     __ptext3:
   361                           	opt stack 0
   362  0001C4                     _Timer0Init:
   363                           	opt stack 26
   364                           
   365                           ;Fonctions.c: 36: Timer0Stop();
   366                           
   367                           ;incstack = 0
   368  0001C4  EC18  F001         	call	_Timer0Stop	;wreg free
   369                           
   370                           ;Fonctions.c: 37: T0CONbits.T08BIT = 1;
   371  0001C8  8CD5               	bsf	4053,6,c	;volatile
   372                           
   373                           ;Fonctions.c: 38: T0CONbits.T0CS = 1;
   374  0001CA  50D5               	movf	4053,w,c	;volatile
   375  0001CC  0BCF               	andlw	-49
   376  0001CE  0910               	iorlw	16
   377  0001D0  6ED5               	movwf	4053,c	;volatile
   378                           
   379                           ;Fonctions.c: 39: T0CONbits.PSA = 1;
   380  0001D2  86D5               	bsf	4053,3,c	;volatile
   381                           
   382                           ;Fonctions.c: 40: T0CONbits.T0PS = 0;
   383  0001D4  90D5               	bcf	4053,0,c	;volatile
   384  0001D6  92D5               	bcf	4053,1,c	;volatile
   385  0001D8  94D5               	bcf	4053,2,c	;volatile
   386                           
   387                           ;Fonctions.c: 41: TMR0L = 0xFF;
   388  0001DA  68D6               	setf	4054,c	;volatile
   389  0001DC  0012               	return		;funcret
   390  0001DE                     __end_of_Timer0Init:
   391                           	opt stack 0
   392                           intcon	equ	0xFF2
   393                           intcon2	equ	0xFF1
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           
   397 ;; *************** function _Timer0Stop *****************
   398 ;; Defined at:
   399 ;;		line 49 in file "Fonctions.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		None
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    2
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_Timer0Init
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text4
   428  000230                     __ptext4:
   429                           	opt stack 0
   430  000230                     _Timer0Stop:
   431                           	opt stack 26
   432                           
   433                           ;Fonctions.c: 51: T0CONbits.TMR0ON = 0;
   434                           
   435                           ;incstack = 0
   436  000230  9ED5               	bcf	4053,7,c	;volatile
   437  000232  0012               	return		;funcret
   438  000234                     __end_of_Timer0Stop:
   439                           	opt stack 0
   440                           intcon	equ	0xFF2
   441                           intcon2	equ	0xFF1
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445 ;; *************** function _LCDWait *****************
   446 ;; Defined at:
   447 ;;		line 91 in file "Fonctions.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  delaiUs         2   17[COMRAM] int 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    3
   468 ;; This function calls:
   469 ;;		_LCDBusy
   470 ;; This function is called by:
   471 ;;		_InitLCD
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text5
   476  0001F4                     __ptext5:
   477                           	opt stack 0
   478  0001F4                     _LCDWait:
   479                           	opt stack 26
   480                           
   481                           ;Fonctions.c: 93: LCDBusy();
   482                           
   483                           ;incstack = 0
   484  0001F4  EC15  F001         	call	_LCDBusy	;wreg free
   485                           
   486                           ;Fonctions.c: 94: CNT2 = delaiUs;
   487  0001F8  C012  F021         	movff	LCDWait@delaiUs,_CNT2
   488  0001FC  C013  F022         	movff	LCDWait@delaiUs+1,_CNT2+1
   489  000200  0012               	return		;funcret
   490  000202                     __end_of_LCDWait:
   491                           	opt stack 0
   492                           intcon	equ	0xFF2
   493                           intcon2	equ	0xFF1
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497 ;; *************** function _LCDBusy *****************
   498 ;; Defined at:
   499 ;;		line 97 in file "Fonctions.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    2
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_LCDWait
   524 ;;		_WriteLCD
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text6
   529  00022A                     __ptext6:
   530                           	opt stack 0
   531  00022A                     _LCDBusy:
   532                           	opt stack 26
   533                           
   534                           ;Fonctions.c: 99: LCDbusy = 1;
   535                           
   536                           ;incstack = 0
   537  00022A  0E01               	movlw	1
   538  00022C  6E23               	movwf	_LCDbusy,c
   539  00022E  0012               	return		;funcret
   540  000230                     __end_of_LCDBusy:
   541                           	opt stack 0
   542                           intcon	equ	0xFF2
   543                           intcon2	equ	0xFF1
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           
   547 ;; *************** function _IOInit *****************
   548 ;; Defined at:
   549 ;;		line 63 in file "Fonctions.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		None
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    2
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_InitLCD
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text7
   578  000202                     __ptext7:
   579                           	opt stack 0
   580  000202                     _IOInit:
   581                           	opt stack 27
   582                           
   583                           ;Fonctions.c: 65: TRISDbits.TRISD4 = 0;
   584                           
   585                           ;incstack = 0
   586  000202  9895               	bcf	3989,4,c	;volatile
   587                           
   588                           ;Fonctions.c: 66: TRISDbits.TRISD3 = 0;
   589  000204  9695               	bcf	3989,3,c	;volatile
   590                           
   591                           ;Fonctions.c: 67: TRISDbits.TRISD2 = 0;
   592  000206  9495               	bcf	3989,2,c	;volatile
   593                           
   594                           ;Fonctions.c: 68: TRISDbits.TRISD1 = 1;
   595  000208  8295               	bsf	3989,1,c	;volatile
   596                           
   597                           ;Fonctions.c: 70: LATDbits.LATD3 = 1;
   598  00020A  868C               	bsf	3980,3,c	;volatile
   599                           
   600                           ;Fonctions.c: 71: LATDbits.LATD2 = 1;
   601  00020C  848C               	bsf	3980,2,c	;volatile
   602  00020E  0012               	return		;funcret
   603  000210                     __end_of_IOInit:
   604                           	opt stack 0
   605                           intcon	equ	0xFF2
   606                           intcon2	equ	0xFF1
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           
   610 ;; *************** function _InitDataLCD *****************
   611 ;; Defined at:
   612 ;;		line 107 in file "Fonctions.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  RS              1    wreg     unsigned char 
   615 ;;  RW              1   17[COMRAM] unsigned char 
   616 ;;  data            1   18[COMRAM] unsigned char 
   617 ;;  delayUs         2   19[COMRAM] int 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  RS              1   22[COMRAM] unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   633 ;;Total ram usage:        6 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    3
   636 ;; This function calls:
   637 ;;		_Timer0Start
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text8
   644  0000B8                     __ptext8:
   645                           	opt stack 0
   646  0000B8                     _InitDataLCD:
   647                           	opt stack 27
   648                           
   649                           ;incstack = 0
   650                           ;InitDataLCD@RS stored from wreg
   651  0000B8  6E17               	movwf	InitDataLCD@RS,c
   652  0000BA                     l862:
   653  0000BA  501C               	movf	_CNT1,w,c
   654  0000BC  101D               	iorwf	_CNT1+1,w,c
   655  0000BE  A4D8               	btfss	status,2,c
   656  0000C0  D7FC               	goto	l862
   657                           
   658                           ;Fonctions.c: 110: NextCNT2 = delayUs;
   659  0000C2  C014  F01E         	movff	InitDataLCD@delayUs,_NextCNT2
   660  0000C6  C015  F01F         	movff	InitDataLCD@delayUs+1,_NextCNT2+1
   661                           
   662                           ;Fonctions.c: 111: CNT1 = 24;
   663  0000CA  0E00               	movlw	0
   664  0000CC  6E1D               	movwf	_CNT1+1,c
   665  0000CE  0E18               	movlw	24
   666  0000D0  6E1C               	movwf	_CNT1,c
   667                           
   668                           ;Fonctions.c: 113: DataLCD = 0;
   669  0000D2  0E00               	movlw	0
   670  0000D4  6E18               	movwf	_DataLCD,c
   671  0000D6  0E00               	movlw	0
   672  0000D8  6E19               	movwf	_DataLCD+1,c
   673  0000DA  0E00               	movlw	0
   674  0000DC  6E1A               	movwf	_DataLCD+2,c
   675  0000DE  0E00               	movlw	0
   676  0000E0  6E1B               	movwf	_DataLCD+3,c
   677                           
   678                           ;Fonctions.c: 114: DataLCD = ((long)data & 0xF0);
   679  0000E2  C013  F016         	movff	InitDataLCD@data,??_InitDataLCD
   680  0000E6  0EF0               	movlw	240
   681  0000E8  1616               	andwf	??_InitDataLCD,f,c
   682  0000EA  5016               	movf	??_InitDataLCD,w,c
   683  0000EC  6E18               	movwf	_DataLCD,c
   684  0000EE  6A19               	clrf	_DataLCD+1,c
   685  0000F0  6A1A               	clrf	_DataLCD+2,c
   686  0000F2  6A1B               	clrf	_DataLCD+3,c
   687                           
   688                           ;Fonctions.c: 115: DataLCD <<= 4;
   689  0000F4  0E04               	movlw	4
   690  0000F6                     u165:
   691  0000F6  90D8               	bcf	status,0,c
   692  0000F8  3618               	rlcf	_DataLCD,f,c
   693  0000FA  3619               	rlcf	_DataLCD+1,f,c
   694  0000FC  361A               	rlcf	_DataLCD+2,f,c
   695  0000FE  361B               	rlcf	_DataLCD+3,f,c
   696  000100  2EE8               	decfsz	wreg,f,c
   697  000102  D7F9               	goto	u165
   698                           
   699                           ;Fonctions.c: 116: DataLCD += ((long)data & 0x0F);
   700  000104  C013  F016         	movff	InitDataLCD@data,??_InitDataLCD
   701  000108  0E0F               	movlw	15
   702  00010A  1616               	andwf	??_InitDataLCD,f,c
   703  00010C  5016               	movf	??_InitDataLCD,w,c
   704  00010E  2618               	addwf	_DataLCD,f,c
   705  000110  0E00               	movlw	0
   706  000112  2219               	addwfc	_DataLCD+1,f,c
   707  000114  221A               	addwfc	_DataLCD+2,f,c
   708  000116  221B               	addwfc	_DataLCD+3,f,c
   709                           
   710                           ;Fonctions.c: 117: DataLCD <<= 2;
   711  000118  0E02               	movlw	2
   712  00011A                     u175:
   713  00011A  90D8               	bcf	status,0,c
   714  00011C  3618               	rlcf	_DataLCD,f,c
   715  00011E  3619               	rlcf	_DataLCD+1,f,c
   716  000120  361A               	rlcf	_DataLCD+2,f,c
   717  000122  361B               	rlcf	_DataLCD+3,f,c
   718  000124  2EE8               	decfsz	wreg,f,c
   719  000126  D7F9               	goto	u175
   720                           
   721                           ;Fonctions.c: 118: DataLCD += (long)RS;
   722  000128  5017               	movf	InitDataLCD@RS,w,c
   723  00012A  2618               	addwf	_DataLCD,f,c
   724  00012C  0E00               	movlw	0
   725  00012E  2219               	addwfc	_DataLCD+1,f,c
   726  000130  221A               	addwfc	_DataLCD+2,f,c
   727  000132  221B               	addwfc	_DataLCD+3,f,c
   728                           
   729                           ;Fonctions.c: 119: DataLCD <<= 1;
   730  000134  90D8               	bcf	status,0,c
   731  000136  3618               	rlcf	_DataLCD,f,c
   732  000138  3619               	rlcf	_DataLCD+1,f,c
   733  00013A  361A               	rlcf	_DataLCD+2,f,c
   734  00013C  361B               	rlcf	_DataLCD+3,f,c
   735                           
   736                           ;Fonctions.c: 120: DataLCD += (long)RW;
   737  00013E  5012               	movf	InitDataLCD@RW,w,c
   738  000140  2618               	addwf	_DataLCD,f,c
   739  000142  0E00               	movlw	0
   740  000144  2219               	addwfc	_DataLCD+1,f,c
   741  000146  221A               	addwfc	_DataLCD+2,f,c
   742  000148  221B               	addwfc	_DataLCD+3,f,c
   743                           
   744                           ;Fonctions.c: 121: DataLCD <<= 5;
   745  00014A  0E05               	movlw	5
   746  00014C                     u185:
   747  00014C  90D8               	bcf	status,0,c
   748  00014E  3618               	rlcf	_DataLCD,f,c
   749  000150  3619               	rlcf	_DataLCD+1,f,c
   750  000152  361A               	rlcf	_DataLCD+2,f,c
   751  000154  361B               	rlcf	_DataLCD+3,f,c
   752  000156  2EE8               	decfsz	wreg,f,c
   753  000158  D7F9               	goto	u185
   754                           
   755                           ;Fonctions.c: 122: DataLCD += 0x1F;
   756  00015A  0E1F               	movlw	31
   757  00015C  2618               	addwf	_DataLCD,f,c
   758  00015E  0E00               	movlw	0
   759  000160  2219               	addwfc	_DataLCD+1,f,c
   760  000162  221A               	addwfc	_DataLCD+2,f,c
   761  000164  221B               	addwfc	_DataLCD+3,f,c
   762                           
   763                           ;Fonctions.c: 123: FlagCSToggle = 1;
   764  000166  0E01               	movlw	1
   765  000168  6E20               	movwf	_FlagCSToggle,c
   766                           
   767                           ;Fonctions.c: 124: Timer0Start();
   768  00016A  EC1A  F001         	call	_Timer0Start	;wreg free
   769  00016E  0012               	return		;funcret
   770  000170                     __end_of_InitDataLCD:
   771                           	opt stack 0
   772                           intcon	equ	0xFF2
   773                           intcon2	equ	0xFF1
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _Timer0Start *****************
   779 ;; Defined at:
   780 ;;		line 44 in file "Fonctions.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		None
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_InitDataLCD
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text9
   809  000234                     __ptext9:
   810                           	opt stack 0
   811  000234                     _Timer0Start:
   812                           	opt stack 27
   813                           
   814                           ;Fonctions.c: 46: T0CONbits.TMR0ON = 1;
   815                           
   816                           ;incstack = 0
   817  000234  8ED5               	bsf	4053,7,c	;volatile
   818  000236  0012               	return		;funcret
   819  000238                     __end_of_Timer0Start:
   820                           	opt stack 0
   821                           intcon	equ	0xFF2
   822                           intcon2	equ	0xFF1
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           status	equ	0xFD8
   826                           
   827 ;; *************** function _myIsr *****************
   828 ;; Defined at:
   829 ;;		line 17 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;Total ram usage:       17 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		_ClockToggle
   852 ;; This function is called by:
   853 ;;		Interrupt level 1
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	intcodelo
   858  000018                     __pintcodelo:
   859                           	opt stack 0
   860  000018                     _myIsr:
   861                           	opt stack 26
   862                           
   863                           ;incstack = 0
   864  000018  8024               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   865  00001A  CFD8 F001          	movff	status,??_myIsr
   866  00001E  CFE8 F002          	movff	wreg,??_myIsr+1
   867  000022  CFE0 F003          	movff	bsr,??_myIsr+2
   868  000026  CFFA F004          	movff	pclath,??_myIsr+3
   869  00002A  CFFB F005          	movff	pclatu,??_myIsr+4
   870  00002E  CFE9 F006          	movff	fsr0l,??_myIsr+5
   871  000032  CFEA F007          	movff	fsr0h,??_myIsr+6
   872  000036  CFE1 F008          	movff	fsr1l,??_myIsr+7
   873  00003A  CFE2 F009          	movff	fsr1h,??_myIsr+8
   874  00003E  CFD9 F00A          	movff	fsr2l,??_myIsr+9
   875  000042  CFDA F00B          	movff	fsr2h,??_myIsr+10
   876  000046  CFF3 F00C          	movff	prodl,??_myIsr+11
   877  00004A  CFF4 F00D          	movff	prodh,??_myIsr+12
   878  00004E  CFF6 F00E          	movff	tblptrl,??_myIsr+13
   879  000052  CFF7 F00F          	movff	tblptrh,??_myIsr+14
   880  000056  CFF8 F010          	movff	tblptru,??_myIsr+15
   881  00005A  CFF5 F011          	movff	tablat,??_myIsr+16
   882                           
   883                           ;main.c: 19: if(INTCONbits.TMR0IF)
   884  00005E  A4F2               	btfss	intcon,2,c	;volatile
   885  000060  D005               	goto	i1l16
   886                           
   887                           ;main.c: 20: {
   888                           ;main.c: 21: ClockToggle();
   889  000062  EC08  F001         	call	_ClockToggle	;wreg free
   890                           
   891                           ;main.c: 22: INTCONbits.TMR0IF = 0;
   892  000066  94F2               	bcf	intcon,2,c	;volatile
   893                           
   894                           ;main.c: 23: TMR0H = 0xFF;
   895  000068  68D7               	setf	4055,c	;volatile
   896                           
   897                           ;main.c: 24: TMR0L = 0xFF;
   898  00006A  68D6               	setf	4054,c	;volatile
   899  00006C                     i1l16:
   900  00006C  C011  FFF5         	movff	??_myIsr+16,tablat
   901  000070  C010  FFF8         	movff	??_myIsr+15,tblptru
   902  000074  C00F  FFF7         	movff	??_myIsr+14,tblptrh
   903  000078  C00E  FFF6         	movff	??_myIsr+13,tblptrl
   904  00007C  C00D  FFF4         	movff	??_myIsr+12,prodh
   905  000080  C00C  FFF3         	movff	??_myIsr+11,prodl
   906  000084  C00B  FFDA         	movff	??_myIsr+10,fsr2h
   907  000088  C00A  FFD9         	movff	??_myIsr+9,fsr2l
   908  00008C  C009  FFE2         	movff	??_myIsr+8,fsr1h
   909  000090  C008  FFE1         	movff	??_myIsr+7,fsr1l
   910  000094  C007  FFEA         	movff	??_myIsr+6,fsr0h
   911  000098  C006  FFE9         	movff	??_myIsr+5,fsr0l
   912  00009C  C005  FFFB         	movff	??_myIsr+4,pclatu
   913  0000A0  C004  FFFA         	movff	??_myIsr+3,pclath
   914  0000A4  C003  FFE0         	movff	??_myIsr+2,bsr
   915  0000A8  C002  FFE8         	movff	??_myIsr+1,wreg
   916  0000AC  C001  FFD8         	movff	??_myIsr,status
   917  0000B0  9024               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   918  0000B2  0010               	retfie	
   919  0000B4                     __end_of_myIsr:
   920                           	opt stack 0
   921                           pclatu	equ	0xFFB
   922                           pclath	equ	0xFFA
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           prodh	equ	0xFF4
   928                           prodl	equ	0xFF3
   929                           intcon	equ	0xFF2
   930                           intcon2	equ	0xFF1
   931                           postinc0	equ	0xFEE
   932                           fsr0h	equ	0xFEA
   933                           fsr0l	equ	0xFE9
   934                           wreg	equ	0xFE8
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           bsr	equ	0xFE0
   938                           fsr2h	equ	0xFDA
   939                           fsr2l	equ	0xFD9
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _ClockToggle *****************
   943 ;; Defined at:
   944 ;;		line 74 in file "Fonctions.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_myIsr
   968 ;;		_WriteLCD
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text11
   973  000210                     __ptext11:
   974                           	opt stack 0
   975  000210                     _ClockToggle:
   976                           	opt stack 26
   977                           
   978                           ;Fonctions.c: 76: LATDbits.LATD2 += 1;
   979                           
   980                           ;incstack = 0
   981  000210  748C               	btg	3980,2,c	;volatile
   982                           
   983                           ;Fonctions.c: 77: return LATDbits.LATD2;
   984  000212  A48C               	btfss	3980,2,c	;volatile
   985  000214  D002               	goto	i1u1_20
   986  000216  0E01               	movlw	1
   987  000218  0012               	return	
   988  00021A                     i1u1_20:
   989  00021A  0E00               	movlw	0
   990  00021C  0012               	return	
   991  00021E                     __end_of_ClockToggle:
   992                           	opt stack 0
   993  0000                     pclatu	equ	0xFFB
   994                           pclath	equ	0xFFA
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           prodh	equ	0xFF4
  1000                           prodl	equ	0xFF3
  1001                           intcon	equ	0xFF2
  1002                           intcon2	equ	0xFF1
  1003                           postinc0	equ	0xFEE
  1004                           fsr0h	equ	0xFEA
  1005                           fsr0l	equ	0xFE9
  1006                           wreg	equ	0xFE8
  1007                           fsr1h	equ	0xFE2
  1008                           fsr1l	equ	0xFE1
  1009                           bsr	equ	0xFE0
  1010                           fsr2h	equ	0xFDA
  1011                           fsr2l	equ	0xFD9
  1012                           status	equ	0xFD8
  1013                           pclatu	equ	0xFFB
  1014                           pclath	equ	0xFFA
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           prodh	equ	0xFF4
  1020                           prodl	equ	0xFF3
  1021                           intcon	equ	0xFF2
  1022                           intcon2	equ	0xFF1
  1023                           postinc0	equ	0xFEE
  1024                           fsr0h	equ	0xFEA
  1025                           fsr0l	equ	0xFE9
  1026                           wreg	equ	0xFE8
  1027                           fsr1h	equ	0xFE2
  1028                           fsr1l	equ	0xFE1
  1029                           bsr	equ	0xFE0
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           status	equ	0xFD8
  1033                           
  1034                           	psect	rparam
  1035  0000                     pclatu	equ	0xFFB
  1036                           pclath	equ	0xFFA
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           prodh	equ	0xFF4
  1042                           prodl	equ	0xFF3
  1043                           intcon	equ	0xFF2
  1044                           intcon2	equ	0xFF1
  1045                           postinc0	equ	0xFEE
  1046                           fsr0h	equ	0xFEA
  1047                           fsr0l	equ	0xFE9
  1048                           wreg	equ	0xFE8
  1049                           fsr1h	equ	0xFE2
  1050                           fsr1l	equ	0xFE1
  1051                           bsr	equ	0xFE0
  1052                           fsr2h	equ	0xFDA
  1053                           fsr2l	equ	0xFD9
  1054                           status	equ	0xFD8
  1055                           
  1056                           	psect	temp
  1057  000024                     btemp:
  1058                           	opt stack 0
  1059  000024                     	ds	1
  1060  0000                     int$flags	set	btemp
  1061                           pclatu	equ	0xFFB
  1062                           pclath	equ	0xFFA
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           intcon	equ	0xFF2
  1070                           intcon2	equ	0xFF1
  1071                           postinc0	equ	0xFEE
  1072                           fsr0h	equ	0xFEA
  1073                           fsr0l	equ	0xFE9
  1074                           wreg	equ	0xFE8
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           bsr	equ	0xFE0
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_InitDataLCD
    _InitLCD->_LCDWait
    _InitLCD->_Timer0Init

Critical Paths under _myIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     433
                        _InitDataLCD
                            _InitLCD
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      65
                             _IOInit
                            _LCDWait
                         _Timer0Init
                      _Timer0IntInit
 ---------------------------------------------------------------------------------
 (2) _Timer0IntInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0Init                                           2     0      2       0
                                             17 COMRAM     2     0      2
                         _Timer0Stop
 ---------------------------------------------------------------------------------
 (3) _Timer0Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDWait                                              2     0      2      65
                                             17 COMRAM     2     0      2
                            _LCDBusy
 ---------------------------------------------------------------------------------
 (3) _LCDBusy                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDataLCD                                          6     2      4     368
                                             17 COMRAM     6     2      4
                        _Timer0Start
 ---------------------------------------------------------------------------------
 (2) _Timer0Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myIsr                                               17    17      0       0
                                              0 COMRAM    17    17      0
                        _ClockToggle
 ---------------------------------------------------------------------------------
 (5) _ClockToggle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDataLCD
     _Timer0Start
   _InitLCD
     _IOInit
     _LCDWait
       _LCDBusy
     _Timer0Init
       _Timer0Stop
     _Timer0IntInit

 _myIsr (ROOT)
   _ClockToggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      23       1       37.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23       8        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Nov 19 19:01:11 2017

                     bsr 000FE0              __CFG_BORV$1 000000                      l862 00BA  
                    l892 018A                      u165 00F6                      u175 011A  
                    u185 014C                      wreg 000FE8          __end_of_LCDBusy 0230  
        __end_of_LCDWait 0202      __end_of_ClockToggle 021E                     _CNT1 001C  
                   _CNT2 0021                     i1l16 006C            ??_InitDataLCD 0016  
                   _main 0170                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0024                     pclat 000FFA  
        InitDataLCD@data 0013                     prodh 000FF4                     prodl 000FF3  
                   start 00B4            __CFG_IESO$OFF 000000             ___param_bank 000010  
        __end_of_InitLCD 01C4                    ?_main 0001                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _myIsr 0018    __end_of_Timer0IntInit 022A  
                  tablat 000FF5                    status 000FD8      __end_of_InitDataLCD 0170  
        __initialization 01DE             __end_of_main 01A2                   ??_main 0018  
          __activetblptr 000000              _ClockToggle 0210                ??_LCDBusy 0012  
              ??_LCDWait 0014                   ?_myIsr 0001                   _IOInit 0202  
                 i1u1_20 021A                ??_InitLCD 0014            ??_Timer0Start 0012  
         __CFG_XINST$OFF 000000               _Timer0Init 01C4               _Timer0Stop 0230  
         __CFG_STVREN$ON 000000                   clear_0 01E4             _FlagCSToggle 0020  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            _InitDataLCD 00B8               __accesstop 0060  __end_of__initialization 01EA  
          ___rparam_used 000001            InitDataLCD@RS 0017            InitDataLCD@RW 0012  
         __pcstackCOMRAM 0001            __end_of_myIsr 00B4      __end_of_Timer0Start 0238  
      __CFG_PLLDIV$NODIV 000000                  ??_myIsr 0001                  ?_IOInit 0001  
             __pnvCOMRAM 0021              ?_Timer0Init 0012              ?_Timer0Stop 0001  
                _LCDBusy 022A                  _LCDWait 01F4                  _LCDbusy 0023  
                _DataLCD 0018          __size_of_IOInit 000E                  _InitLCD 01A2  
                __Hparam 0000                  __Lparam 0000              _Timer0Start 0234  
                __pcinit 01DE                  __ramtop 0E00                  __ptext0 0170  
                __ptext1 01A2                  __ptext2 021E                  __ptext3 01C4  
                __ptext4 0230                  __ptext5 01F4                  __ptext6 022A  
                __ptext7 0202                  __ptext8 00B8                  __ptext9 0234  
              _T0CONbits 000FD5             ?_ClockToggle 0001      __size_of_Timer0Init 001A  
    __size_of_Timer0Stop 0004     end_of_initialization 01EA       InitDataLCD@delayUs 0014  
                postinc0 000FEE   __size_of_Timer0IntInit 000C         __CFG_FOSC$FRCPLL 000000  
              _TRISDbits 000F95             ?_InitDataLCD 0012           __end_of_IOInit 0210  
    start_initialization 01DE           LCDWait@delaiUs 0012            _Timer0IntInit 021E  
               ??_IOInit 0012             ??_Timer0Init 0014             ??_Timer0Stop 0012  
               ?_LCDBusy 0001                 ?_LCDWait 0012              __pbssCOMRAM 0018  
   __size_of_ClockToggle 000E       __end_of_Timer0Init 01DE       __end_of_Timer0Stop 0234  
         ?_Timer0IntInit 0001                 ?_InitLCD 0001             ?_Timer0Start 0001  
            __pintcodelo 0018           __size_of_myIsr 009C                 _LATDbits 000F8C  
   __size_of_InitDataLCD 00B8                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
       __size_of_LCDBusy 0006         __size_of_LCDWait 000E          ??_Timer0IntInit 0012  
            _INTCON2bits 000FF1                 _NextCNT2 001E         __size_of_InitLCD 0022  
               __Hrparam 0000                 __Lrparam 0000                 __ptext11 0210  
          __size_of_main 0032                 int$flags 0024     __size_of_Timer0Start 0004  
             _INTCONbits 000FF2                 intlevel1 0000            ??_ClockToggle 0001  
